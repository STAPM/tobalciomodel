#sheet <- "Input Output Table"
### Read in the sector names
sector <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "B6:C111",
col_names = FALSE)
setDT(sector)
setnames(sector, names(sector), c("IOC","Sector"))
### Read in the flowtable
flowtable <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D6:DE111",
col_names = FALSE)
### Read in the household consumption/demand and output rows
hhold.output <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D117:DE117",
col_names = FALSE)
hhold.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DG6:DG111",
col_names = FALSE)
### Read in the final demand and total output
total.output <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D120:DE120",
col_names = FALSE)
final.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DS6:DS111",
col_names = FALSE)
total.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DT6:DT111",
col_names = FALSE)
govt.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DI6:DI111",
col_names = FALSE)
gva.taxes <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D116:DE116",
col_names = FALSE)
gva.wages <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D117:DE117",
col_names = FALSE)
gva.gos <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D118:DE118",
col_names = FALSE)
gva.total <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D119:DE119",
col_names = FALSE)
flowtable <- as.matrix(flowtable)
total.demand <- as.matrix(total.demand)
final.demand <- as.matrix(final.demand)
govt.demand  <- as.matrix(govt.demand)
hhold.demand <- as.matrix(hhold.demand)
total.output <- as.vector(as.matrix(total.output))
hhold.output <- as.vector(as.matrix(hhold.output))
gva.taxes <- as.vector(as.matrix(gva.taxes))
gva.wages <- as.vector(as.matrix(gva.wages))
gva.gos   <- as.vector(as.matrix(gva.gos))
gva.total <- as.vector(as.matrix(gva.total))
iotable_fai <- data.table(sector,flowtable,hhold.demand,govt.demand,final.demand,hhold.output,total.output,total.demand,
gva.taxes,gva.wages,gva.gos,gva.total)
setnames(iotable_fai, old = names(iotable_fai), new = c("IOC","Sector",paste0("sec",c(1:106)),
"hhold.demand","govt.demand","final.demand",
"hhold.output","total.output","total.demand",
"gva.taxes","gva.wages","gva.gos","gva.total"))
### read in the flow table and other IO table elements into an R data file
library(readxl)
library(data.table)
path  <- "data-raw/"
file  <- "2010_UK_Alcohol_consumption_disaggregated_IxI.xlsx"
sheet <- "Sheet1"
#path  <- "data-raw/"
#file  <- "tobalciomodel.xlsx"
#sheet <- "Input Output Table"
### Read in the sector names
sector <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "B6:C111",
col_names = FALSE)
setDT(sector)
setnames(sector, names(sector), c("IOC","Sector"))
### Read in the flowtable
flowtable <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D6:DE111",
col_names = FALSE)
### Read in the household consumption/demand and output rows
hhold.output <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D117:DE117",
col_names = FALSE)
hhold.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DG6:DG111",
col_names = FALSE)
### Read in the final demand and total output
total.output <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D120:DE120",
col_names = FALSE)
final.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DS6:DS111",
col_names = FALSE)
total.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DT6:DT111",
col_names = FALSE)
govt.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DI6:DI111",
col_names = FALSE)
gva.taxes <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D116:DE116",
col_names = FALSE)
gva.wages <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D117:DE117",
col_names = FALSE)
gva.gos <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D118:DE118",
col_names = FALSE)
gva.total <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D119:DE119",
col_names = FALSE)
flowtable <- as.matrix(flowtable)
total.demand <- as.matrix(total.demand)
final.demand <- as.matrix(final.demand)
govt.demand  <- as.matrix(govt.demand)
hhold.demand <- as.matrix(hhold.demand)
total.output <- as.vector(as.matrix(total.output))
hhold.output <- as.vector(as.matrix(hhold.output))
gva.taxes <- as.vector(as.matrix(gva.taxes))
gva.wages <- as.vector(as.matrix(gva.wages))
gva.gos   <- as.vector(as.matrix(gva.gos))
gva.total <- as.vector(as.matrix(gva.total))
iotable_fai <- data.table(sector,flowtable,hhold.demand,govt.demand,final.demand,hhold.output,total.output,total.demand,
gva.taxes,gva.wages,gva.gos,gva.total)
names(iotable_fai)
### read in the flow table and other IO table elements into an R data file
library(readxl)
library(data.table)
path  <- "data-raw/"
file  <- "2010_UK_Alcohol_consumption_disaggregated_IxI.xlsx"
sheet <- "Sheet1"
#path  <- "data-raw/"
#file  <- "tobalciomodel.xlsx"
#sheet <- "Input Output Table"
### Read in the sector names
sector <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "B6:C111",
col_names = FALSE)
setDT(sector)
setnames(sector, names(sector), c("IOC","Sector"))
### Read in the flowtable
flowtable <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D6:DE111",
col_names = FALSE)
setDT(flowtable)
### Read in the household consumption/demand and output rows
hhold.output <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D117:DE117",
col_names = FALSE)
setDT(hhold.output)
hhold.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DG6:DG111",
col_names = FALSE)
setDT(hhold.demand)
### Read in the final demand and total output
total.output <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D120:DE120",
col_names = FALSE)
setDT(total.output)
final.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DS6:DS111",
col_names = FALSE)
setDT(final.demand)
total.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DT6:DT111",
col_names = FALSE)
setDT(total.demand)
govt.demand <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "DI6:DI111",
col_names = FALSE)
setDT(govt.demand)
gva.taxes <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D116:DE116",
col_names = FALSE)
setDT(gva.taxes)
gva.wages <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D117:DE117",
col_names = FALSE)
setDT(gva.wages)
gva.gos <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D118:DE118",
col_names = FALSE)
setDT(gva.gos)
gva.total <- read_excel(path = paste0(path,file),
sheet = sheet,
range = "D119:DE119",
col_names = FALSE)
setDT(gva.total)
View(gva.total)
View(gva.wages)
flowtable <- as.matrix(flowtable)
total.demand <- as.matrix(total.demand)
final.demand <- as.matrix(final.demand)
govt.demand  <- as.matrix(govt.demand)
hhold.demand <- as.matrix(hhold.demand)
total.output <- as.vector(as.matrix(total.output))
hhold.output <- as.vector(as.matrix(hhold.output))
gva.taxes <- as.vector(as.matrix(gva.taxes))
gva.wages <- as.vector(as.matrix(gva.wages))
gva.gos   <- as.vector(as.matrix(gva.gos))
gva.total <- as.vector(as.matrix(gva.total))
View(iotable_fai)
iotable_fai <- cbind(sector,flowtable,hhold.demand,govt.demand,final.demand,hhold.output,total.output,total.demand,
gva.taxes,gva.wages,gva.gos,gva.total)
View(iotable_fai)
flowtable <- as.matrix(flowtable)
total.demand <- as.vector(as.matrix(total.demand))
final.demand <- as.vector(as.matrix(final.demand))
govt.demand  <- as.vector(as.matrix(govt.demand))
hhold.demand <- as.vector(as.matrix(hhold.demand))
total.output <- as.vector(as.matrix(total.output))
hhold.output <- as.vector(as.matrix(hhold.output))
gva.taxes <- as.vector(as.matrix(gva.taxes))
gva.wages <- as.vector(as.matrix(gva.wages))
gva.gos   <- as.vector(as.matrix(gva.gos))
gva.total <- as.vector(as.matrix(gva.total))
iotable_fai <- cbind(sector,flowtable,hhold.demand,govt.demand,final.demand,hhold.output,total.output,total.demand,
gva.taxes,gva.wages,gva.gos,gva.total)
View(iotable_fai)
setnames(iotable_fai, old = names(iotable_fai), new = c("IOC","Sector", paste0("sec",c(1:106)),
"hhold.demand","govt.demand","final.demand",
"hhold.output","total.output","total.demand",
"gva.taxes","gva.wages","gva.gos","gva.total"))
usethis::use_data(iotable_fai,overwrite=TRUE)
roxygen2::roxygenise()
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
expenditure = c(-20,10,30)
saving_rate = 0.1
vector = "hhfce_noalctob"
vectors_data = tobalciomodel::vectors_hhold
mapping = tobalciomodel::coicop_cpa_mapping
FAI = FALSE
# calculate the amount of expenditure that will be reallocated
exp <- -1*(1 - saving_rate)*sum(expenditure)
# select the chosen reallocation vector
if (vector == "hhfce_all") {
v <- as.vector(as.matrix( vectors_data[,2] ))
} else if (vector == "hhfce_noalc") {
v <- as.vector(as.matrix( vectors_data[,3] ))
} else if (vector == "hhfce_notob") {
v <- as.vector(as.matrix( vectors_data[,4] ))
} else if (vector == "hhfce_noalctob") {
v <- as.vector(as.matrix( vectors_data[,5] ))
} else if (vector == "all_hotels") {
v <- as.vector(as.matrix( vectors_data[,6] ))
} else if (vector == "all_rec_durables") {
v <- as.vector(as.matrix( vectors_data[,7] ))
} else if (vector == "all_rec_services") {
v <- as.vector(as.matrix( vectors_data[,8] ))
}
# redistribute the expenditure along the vector
new_exp <- exp*v
new_exp <- cbind(vectors_data[,1],new_exp)
# map the new expenditure onto the CPA categories
merge <- merge.data.table(mapping,
new_exp,
by = "coicop")
merge[, mapped_exp := new_exp*mapping]
# sum up within CPA categories
merge[, total_exp := sum(mapped_exp), by = "CPA_code"]
# collapse
final <- unique(merge[,c("CPA_code","Product","total_exp")])
### Two discrepancies are caused by merged CPA categories in the
### HHFCE table:
#
# (1) H53 (postal and courier) and I55 (accommodation services)
# (2) C27 (electrical equipment) and C28 (machinery and equipment n.e.c)
#
#     Go to the final consumption expenditure by households column
#     in the IOT sheet in "ioat 2017" and construct ratios from the
#     figures given there to break up the categories. (Hard coded here)
x <- merge(final, tobalciomodel::CPA,
by = "CPA_code", sort = FALSE, all = TRUE)
H53_I55 <- as.numeric(x[CPA_code == "CPA_H53&I55","total_exp"])
x[CPA_code == "CPA_H53", total_exp := H53_I55*841/(841+4722)]
x[CPA_code == "CPA_I55", total_exp := H53_I55*4722/(841+4722)]
C27_C28 <- as.numeric(x[CPA_code == "CPA_C27 & C28","total_exp"])
x[CPA_code == "CPA_C27", total_exp := C27_C28*(1348)/(1348+753)]
x[CPA_code == "CPA_C28", total_exp := C27_C28*(753)/(1348+753)]
setkey(x, CPA_code)
x <- x[!"CPA_C27 & C28"]
x <- x[!"CPA_H53&I55"]
x <- x[,c("CPA_code","Product.y","total_exp")]
setnames(x,c("Product.y","total_exp"),c("Product","hhold_exp"))
if (FAI == FALSE) {
## add in the initial change to expenditure on tobacco and alcohol
x[Product == "Alcoholic beverages  & Tobacco products", hhold_exp := hhold_exp + sum(expenditure)]
} else if (FAI == TRUE) {
## extract the CPA/IOC lookup table and merge, collapsing by FAI categories
merge_data <- unique(tobalciomodel::sic_cpa_fai_mapping[,c("CPA_code","Product","IOC","Sector")])
map_to_FAI <- merge(x, merge_data, by = c("CPA_code","Product"))
FAI_data <- map_to_FAI[, .(hhold_exp = sum(hhold_exp)), by = c("IOC","Sector")]
## merge to the names of the FAI IO table to get the 3 disaggregated alcohol sectors
sectors <- as.data.frame(tobalciomodel::iotable_fai[,"Sector"])
setDT(sectors)
setnames(sectors, names(sectors), "Sector")
FAI_data <- merge(sectors, FAI_data, by = "Sector", all = TRUE, sort = FALSE)
## fill in the three alcohol categories and manufacture of tobacco with the initial changes
## to expenditure - splitting on-trade equally between accommodation/ food and beverage services
FAI_data[61, hhold_exp := expenditure[1]]
FAI_data[c(69,71), hhold_exp := 0.5*expenditure[2]]
FAI_data[18, hhold_exp := expenditure[3]]
## merge again to order sector names properly
x <- merge(sectors, FAI_data, by = "Sector", sort = FALSE)
# calculate the amount of expenditure that will be reallocated
exp <- -1*(1 - saving_rate)*sum(expenditure)
# select the chosen reallocation vector
if (vector == "hhfce_all") {
v <- as.vector(as.matrix( vectors_data[,2] ))
} else if (vector == "hhfce_noalc") {
v <- as.vector(as.matrix( vectors_data[,3] ))
} else if (vector == "hhfce_notob") {
v <- as.vector(as.matrix( vectors_data[,4] ))
} else if (vector == "hhfce_noalctob") {
v <- as.vector(as.matrix( vectors_data[,5] ))
} else if (vector == "all_hotels") {
v <- as.vector(as.matrix( vectors_data[,6] ))
} else if (vector == "all_rec_durables") {
v <- as.vector(as.matrix( vectors_data[,7] ))
} else if (vector == "all_rec_services") {
v <- as.vector(as.matrix( vectors_data[,8] ))
}
# redistribute the expenditure along the vector
new_exp <- exp*v
new_exp <- cbind(vectors_data[,1],new_exp)
# map the new expenditure onto the CPA categories
merge <- merge.data.table(mapping,
new_exp,
by = "coicop")
merge[, mapped_exp := new_exp*mapping]
# sum up within CPA categories
merge[, total_exp := sum(mapped_exp), by = "CPA_code"]
# collapse
final <- unique(merge[,c("CPA_code","Product","total_exp")])
x <- merge(final, tobalciomodel::CPA,
by = "CPA_code", sort = FALSE, all = TRUE)
x <- merge(final, tobalciomodel::CPA,
by = "CPA_code", sort = FALSE, all = TRUE)
H53_I55 <- as.numeric(x[CPA_code == "CPA_H53&I55","total_exp"])
x[CPA_code == "CPA_H53", total_exp := H53_I55*841/(841+4722)]
x[CPA_code == "CPA_I55", total_exp := H53_I55*4722/(841+4722)]
C27_C28 <- as.numeric(x[CPA_code == "CPA_C27 & C28","total_exp"])
x[CPA_code == "CPA_C27", total_exp := C27_C28*(1348)/(1348+753)]
x[CPA_code == "CPA_C28", total_exp := C27_C28*(753)/(1348+753)]
setkey(x, CPA_code)
x <- x[!"CPA_C27 & C28"]
x <- x[!"CPA_H53&I55"]
x <- x[,c("CPA_code","Product.y","total_exp")]
setnames(x,c("Product.y","total_exp"),c("Product","hhold_exp"))
if (FAI == FALSE) {
## add in the initial change to expenditure on tobacco and alcohol
x[Product == "Alcoholic beverages  & Tobacco products", hhold_exp := hhold_exp + sum(expenditure)]
} else if (FAI == TRUE) {
## extract the CPA/IOC lookup table and merge, collapsing by FAI categories
merge_data <- unique(tobalciomodel::sic_cpa_fai_mapping[,c("CPA_code","Product","IOC","Sector")])
map_to_FAI <- merge(x, merge_data, by = c("CPA_code","Product"))
FAI_data <- map_to_FAI[, .(hhold_exp = sum(hhold_exp)), by = c("IOC","Sector")]
## merge to the names of the FAI IO table to get the 3 disaggregated alcohol sectors
sectors <- as.data.frame(tobalciomodel::iotable_fai[,"Sector"])
setDT(sectors)
setnames(sectors, names(sectors), "Sector")
FAI_data <- merge(sectors, FAI_data, by = "Sector", all = TRUE, sort = FALSE)
## fill in the three alcohol categories and manufacture of tobacco with the initial changes
## to expenditure - splitting on-trade equally between accommodation/ food and beverage services
FAI_data[61, hhold_exp := expenditure[1]]
FAI_data[c(69,71), hhold_exp := 0.5*expenditure[2]]
FAI_data[18, hhold_exp := expenditure[3]]
## merge again to order sector names properly
x <- merge(sectors, FAI_data, by = "Sector", sort = FALSE)
}
return(x)
}
help(package = tobalciomodel)
# calculate the amount of expenditure that will be reallocated
exp <- -1*(1 - saving_rate)*sum(expenditure)
# select the chosen reallocation vector
if (vector == "hhfce_all") {
v <- as.vector(as.matrix( vectors_data[,2] ))
} else if (vector == "hhfce_noalc") {
v <- as.vector(as.matrix( vectors_data[,3] ))
} else if (vector == "hhfce_notob") {
v <- as.vector(as.matrix( vectors_data[,4] ))
} else if (vector == "hhfce_noalctob") {
v <- as.vector(as.matrix( vectors_data[,5] ))
} else if (vector == "all_hotels") {
v <- as.vector(as.matrix( vectors_data[,6] ))
} else if (vector == "all_rec_durables") {
v <- as.vector(as.matrix( vectors_data[,7] ))
} else if (vector == "all_rec_services") {
v <- as.vector(as.matrix( vectors_data[,8] ))
}
# redistribute the expenditure along the vector
new_exp <- exp*v
new_exp <- cbind(vectors_data[,1],new_exp)
# map the new expenditure onto the CPA categories
merge <- merge.data.table(mapping,
new_exp,
by = "coicop")
merge[, mapped_exp := new_exp*mapping]
# sum up within CPA categories
merge[, total_exp := sum(mapped_exp), by = "CPA_code"]
# collapse
final <- unique(merge[,c("CPA_code","Product","total_exp")])
rm(list = ls())
expenditure = 10
vector = "central"
vectors_data = tobalciomodel::vectors_govt
FAI = FALSE
exp <- expenditure
if (vector == "central") {
v <- as.vector(as.matrix( vectors_data[,3] ))
} else if (vector == "local") {
v <- as.vector(as.matrix( vectors_data[,4] ))
} else if (vector == "total") {
v <- as.vector(as.matrix( vectors_data[,5] ))
} else if (vector == "all_pubadmin") {
v <- as.vector(as.matrix( vectors_data[,6] ))
} else if (vector == "all_education") {
v <- as.vector(as.matrix( vectors_data[,7] ))
} else if (vector == "all_health") {
v <- as.vector(as.matrix( vectors_data[,8] ))
} else if (vector == "all_socialwork") {
v <- as.vector(as.matrix( vectors_data[,9] ))
} else if (vector == "all_cultural") {
v <- as.vector(as.matrix( vectors_data[,10] ))
}
govt_exp <- exp*v
govt_exp <- cbind(vectors_data[,c(1,2)],govt_exp)
## extract the CPA/IOC lookup table and merge, collapsing by FAI categories
merge_data <- unique(tobalciomodel::sic_cpa_fai_mapping[,c("CPA_code","Product","IOC","Sector")])
map_to_FAI <- merge(govt_exp, merge_data, by = c("CPA_code","Product"))
FAI_data <- map_to_FAI[, .(govt_exp = sum(govt_exp)), by = c("IOC","Sector")]
View(FAI_data)
sectors <- as.data.frame(tobalciomodel::iotable_fai[,"Sector"])
setDT(sectors)
FAI_data <- merge(sectors, FAI_data, by = "Sector", all = TRUE, sort = FALSE)
View(FAI_data)
FAI_data <- merge(sectors, FAI_data, by = "Sector", all = TRUE, sort = TRUE)
## extract the CPA/IOC lookup table and merge, collapsing by FAI categories
merge_data <- unique(tobalciomodel::sic_cpa_fai_mapping[,c("CPA_code","Product","IOC","Sector")])
map_to_FAI <- merge(govt_exp, merge_data, by = c("CPA_code","Product"))
FAI_data <- map_to_FAI[, .(govt_exp = sum(govt_exp)), by = c("IOC","Sector")]
## merge to the names of the FAI IO table to get the 3 disaggregated alcohol sectors
sectors <- as.data.frame(tobalciomodel::iotable_fai[,"Sector"])
setDT(sectors)
setnames(sectors, names(sectors), "Sector")
FAI_data <- merge(sectors, FAI_data, by = "Sector", all = TRUE, sort = TRUE)
library(data.table)
## extract the CPA/IOC lookup table and merge, collapsing by FAI categories
merge_data <- unique(tobalciomodel::sic_cpa_fai_mapping[,c("CPA_code","Product","IOC","Sector")])
map_to_FAI <- merge(govt_exp, merge_data, by = c("CPA_code","Product"))
FAI_data <- map_to_FAI[, .(govt_exp = sum(govt_exp)), by = c("IOC","Sector")]
## merge to the names of the FAI IO table to get the 3 disaggregated alcohol sectors
sectors <- as.data.frame(tobalciomodel::iotable_fai[,"Sector"])
setDT(sectors)
setnames(sectors, names(sectors), "Sector")
FAI_data <- merge(sectors, FAI_data, by = "Sector", all = TRUE, sort = TRUE)
View(FAI_data)
## extract the CPA/IOC lookup table and merge, collapsing by FAI categories
merge_data <- unique(tobalciomodel::sic_cpa_fai_mapping[,c("CPA_code","Product","IOC","Sector")])
map_to_FAI <- merge(govt_exp, merge_data, by = c("CPA_code","Product"))
FAI_data <- map_to_FAI[, .(govt_exp = sum(govt_exp)), by = c("IOC","Sector")]
## merge to the names of the FAI IO table to get the 3 disaggregated alcohol sectors
sectors <- as.data.frame(tobalciomodel::iotable_fai[,c("IOC","Sector")])
setDT(sectors)
View(sectors)
FAI_data <- merge(sectors, FAI_data, by = c("IOC", "Sector"), all = TRUE, sort = FALSE)
View(FAI_data)
FAI_data[61, govt_exp := 0]
FAI_data[c(69,71), govt_exp := 0]
FAI_data[18, govt_exp := 0]
View(FAI_data)
library(tobalciomodel)
library(tobalciomodel)
