View(lfs_empl)
help(package = tobalciomodel)
empl <- tobalciomodel::lfs_empl_fai
View(empl)
library(data.table)
y <- 2010
temp <- empl[year %in% y,]
empl <- tobalciomodel::lfs_empl_fai
for (y in 2010:2020) {
temp <- empl[year %in% y,]
temp[1:3   , Industry := "Agriculture"]
temp[4:57  , Industry := "Production"]
temp[58    , Industry := "Construction"]
temp[59:71 , Industry := "Distribution, transport, hotels and restaurants"]
temp[72:76 , Industry := "Information and communication"]
temp[77:79 , Industry := "Finance and insurance"]
temp[80:81 , Industry := "Real estate"]
temp[82:95 , Industry := "Professional and support activities"]
temp[96:99 , Industry := "Government, education and health"]
temp[100:106 , Industry := "Other services"]
if (y == 2010) {
empl_data <- copy(temp)
} else {
empl_data <- rbindlist(list(empl_data, temp))
}
}
View(empl_data)
names(empl_data)
empl_data <- empl_data[, .(tot_emp = sum(tot_emp),
tot_fte = sum(tot_fte),
by = c("year","Industry"))]
View(empl_data)
library(lfsclean)
library(readxl)
library(data.table)
library(magrittr)
############################
### LFS employment data ####
## NOTE: the file:
## data processing - employment data LFS fai.R
##
## must first be run to produce the data tobalciomodel::lfs_empl_fai
empl <- tobalciomodel::lfs_empl_fai
for (y in 2010:2020) {
temp <- empl[year %in% y,]
temp[1:3   , Industry := "Agriculture"]
temp[4:57  , Industry := "Production"]
temp[58    , Industry := "Construction"]
temp[59:71 , Industry := "Distribution, transport, hotels and restaurants"]
temp[72:76 , Industry := "Information and communication"]
temp[77:79 , Industry := "Finance and insurance"]
temp[80:81 , Industry := "Real estate"]
temp[82:95 , Industry := "Professional and support activities"]
temp[96:99 , Industry := "Government, education and health"]
temp[100:106 , Industry := "Other services"]
if (y == 2010) {
empl_data <- copy(temp)
} else {
empl_data <- rbindlist(list(empl_data, temp))
}
}
empl_data <- empl_data[, .(tot_emp = sum(tot_emp),
tot_fte = sum(tot_fte),
by = c(year,Industry))]
View(empl_data)
library(lfsclean)
library(readxl)
library(data.table)
library(magrittr)
############################
### LFS employment data ####
## NOTE: the file:
## data processing - employment data LFS fai.R
##
## must first be run to produce the data tobalciomodel::lfs_empl_fai
empl <- tobalciomodel::lfs_empl_fai
for (y in 2010:2020) {
temp <- empl[year %in% y,]
temp[1:3   , Industry := "Agriculture"]
temp[4:57  , Industry := "Production"]
temp[58    , Industry := "Construction"]
temp[59:71 , Industry := "Distribution, transport, hotels and restaurants"]
temp[72:76 , Industry := "Information and communication"]
temp[77:79 , Industry := "Finance and insurance"]
temp[80:81 , Industry := "Real estate"]
temp[82:95 , Industry := "Professional and support activities"]
temp[96:99 , Industry := "Government, education and health"]
temp[100:106 , Industry := "Other services"]
if (y == 2010) {
empl_data <- copy(temp)
} else {
empl_data <- rbindlist(list(empl_data, temp))
}
}
empl_data <- empl_data[, .(tot_emp = sum(tot_emp),
tot_fte = sum(tot_fte)),
by = c(year,Industry)]
library(lfsclean)
library(readxl)
library(data.table)
library(magrittr)
############################
### LFS employment data ####
## NOTE: the file:
## data processing - employment data LFS fai.R
##
## must first be run to produce the data tobalciomodel::lfs_empl_fai
empl <- tobalciomodel::lfs_empl_fai
for (y in 2010:2020) {
temp <- empl[year %in% y,]
temp[1:3   , Industry := "Agriculture"]
temp[4:57  , Industry := "Production"]
temp[58    , Industry := "Construction"]
temp[59:71 , Industry := "Distribution, transport, hotels and restaurants"]
temp[72:76 , Industry := "Information and communication"]
temp[77:79 , Industry := "Finance and insurance"]
temp[80:81 , Industry := "Real estate"]
temp[82:95 , Industry := "Professional and support activities"]
temp[96:99 , Industry := "Government, education and health"]
temp[100:106 , Industry := "Other services"]
if (y == 2010) {
empl_data <- copy(temp)
} else {
empl_data <- rbindlist(list(empl_data, temp))
}
}
empl_data <- empl_data[, .(tot_emp = sum(tot_emp),
tot_fte = sum(tot_fte)),
by = c("year","Industry")]
View(empl_data)
yr <- as.character(y)
y <- 2010
yr <- as.character(y)
minyr <- 1997
maxyr <- 2019
minyr <- 1997
maxyr <- 2019
yr <- as.character(y)
gva <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C73:L73")
gva <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C73:L73",
col_names = FALSE)
View(gva)
setDT(gva)
setnames(gva,
names(gva),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
View(gva)
gva <- melt(gva)
View(gva)
gva <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C73:L73",
col_names = FALSE)
setDT(gva)
setnames(gva,
names(gva),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
gva <- melt(gva,
variable.name = "Industry",
value.name = "gva")
View(gva)
gva[, year := y]
View(gva)
yr <- as.character(y)
##### Output
out <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C76:L76",
col_names = FALSE)
setDT(out)
setnames(out,
names(out),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
out <- melt(out,
variable.name = "Industry",
value.name = "output")
out[, year := y]
##### GVA
gva <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C73:L73",
col_names = FALSE)
setDT(gva)
setnames(gva,
names(gva),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
gva <- melt(gva,
variable.name = "Industry",
value.name = "gva")
gva[, year := y]
#### merge
data <- merge(out, gva, by = c("year","Industry"), sort = F)
View(data)
library(lfsclean)
library(readxl)
library(data.table)
library(magrittr)
minyr <- 2010
maxyr <- 2020
############################
### LFS employment data ####
## NOTE: the file:
## data processing - employment data LFS fai.R
##
## must first be run to produce the data tobalciomodel::lfs_empl_fai
empl <- tobalciomodel::lfs_empl_fai
for (y in minyr:maxyr) {
temp <- empl[year %in% y,]
temp[1:3   , Industry := "Agriculture"]
temp[4:57  , Industry := "Production"]
temp[58    , Industry := "Construction"]
temp[59:71 , Industry := "Distribution, transport, hotels and restaurants"]
temp[72:76 , Industry := "Information and communication"]
temp[77:79 , Industry := "Finance and insurance"]
temp[80:81 , Industry := "Real estate"]
temp[82:95 , Industry := "Professional and support activities"]
temp[96:99 , Industry := "Government, education and health"]
temp[100:106 , Industry := "Other services"]
if (y == minyr) {
empl_data <- copy(temp)
} else {
empl_data <- rbindlist(list(empl_data, temp))
}
}
empl_data <- empl_data[, .(tot_emp = sum(tot_emp),
tot_fte = sum(tot_fte)),
by = c("year","Industry")]
###############################################
### GVA and output data from the blue book ####
# https://www.ons.gov.uk/economy/nationalaccounts/supplyandusetables/datasets/inputoutputsupplyandusetablessummarytables
minyr <- 1997
maxyr <- 2019
for (y in minyr:maxyr) {
yr <- as.character(y)
##### Output
out <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C76:L76",
col_names = FALSE)
setDT(out)
setnames(out,
names(out),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
out <- melt(out,
variable.name = "Industry",
value.name = "output")
out[, year := y]
##### GVA
gva <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C73:L73",
col_names = FALSE)
setDT(gva)
setnames(gva,
names(gva),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
gva <- melt(gva,
variable.name = "Industry",
value.name = "gva")
gva[, year := y]
#### merge
data <- merge(out, gva, by = c("year","Industry"), sort = F)
#### stack data
if (y == minyr) {
bb_data <- copy(data)
} else {
bb_data <- rbindlist(list(bb_data, data))
}
}
macro_data <- merge(bb_data, empl_data, by = c("year","Industry"), sort = F)
View(macro_data)
usethis::use_data(macro_data, overwrite = TRUE)
rm(list = ls())
library(lfsclean)
library(readxl)
library(data.table)
library(magrittr)
minyr <- 2010
maxyr <- 2020
############################
### LFS employment data ####
## NOTE: the file:
## data processing - employment data LFS fai.R
##
## must first be run to produce the data tobalciomodel::lfs_empl_fai
empl <- tobalciomodel::lfs_empl_fai
for (y in minyr:maxyr) {
temp <- empl[year %in% y,]
temp[1:3   , Industry := "Agriculture"]
temp[4:57  , Industry := "Production"]
temp[58    , Industry := "Construction"]
temp[59:71 , Industry := "Distribution, transport, hotels and restaurants"]
temp[72:76 , Industry := "Information and communication"]
temp[77:79 , Industry := "Finance and insurance"]
temp[80:81 , Industry := "Real estate"]
temp[82:95 , Industry := "Professional and support activities"]
temp[96:99 , Industry := "Government, education and health"]
temp[100:106 , Industry := "Other services"]
if (y == minyr) {
empl_data <- copy(temp)
} else {
empl_data <- rbindlist(list(empl_data, temp))
}
}
empl_data <- empl_data[, .(tot_emp = sum(tot_emp),
tot_fte = sum(tot_fte)),
by = c("year","Industry")]
###############################################
### GVA and output data from the blue book ####
# https://www.ons.gov.uk/economy/nationalaccounts/supplyandusetables/datasets/inputoutputsupplyandusetablessummarytables
minyr <- 1997
maxyr <- 2019
for (y in minyr:maxyr) {
yr <- as.character(y)
##### Output
out <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C76:L76",
col_names = FALSE)
setDT(out)
setnames(out,
names(out),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
out <- melt(out,
variable.name = "Industry",
value.name = "output")
out[, year := y]
##### GVA
gva <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C73:L73",
col_names = FALSE)
setDT(gva)
setnames(gva,
names(gva),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
gva <- melt(gva,
variable.name = "Industry",
value.name = "gva")
gva[, year := y]
#### merge
data <- merge(out, gva, by = c("year","Industry"), sort = F)
#### stack data
if (y == minyr) {
bb_data <- copy(data)
} else {
bb_data <- rbindlist(list(bb_data, data))
}
}
rm(data, bb_data, out, gva)
macro_data <- merge(bb_data, empl_data, by = c("year","Industry"), sort = F)
usethis::use_data(macro_data, overwrite = TRUE)
library(lfsclean)
library(readxl)
library(data.table)
library(magrittr)
minyr <- 2010
maxyr <- 2020
############################
### LFS employment data ####
## NOTE: the file:
## data processing - employment data LFS fai.R
##
## must first be run to produce the data tobalciomodel::lfs_empl_fai
empl <- tobalciomodel::lfs_empl_fai
for (y in minyr:maxyr) {
temp <- empl[year %in% y,]
temp[1:3   , Industry := "Agriculture"]
temp[4:57  , Industry := "Production"]
temp[58    , Industry := "Construction"]
temp[59:71 , Industry := "Distribution, transport, hotels and restaurants"]
temp[72:76 , Industry := "Information and communication"]
temp[77:79 , Industry := "Finance and insurance"]
temp[80:81 , Industry := "Real estate"]
temp[82:95 , Industry := "Professional and support activities"]
temp[96:99 , Industry := "Government, education and health"]
temp[100:106 , Industry := "Other services"]
if (y == minyr) {
empl_data <- copy(temp)
} else {
empl_data <- rbindlist(list(empl_data, temp))
}
}
empl_data <- empl_data[, .(tot_emp = sum(tot_emp),
tot_fte = sum(tot_fte)),
by = c("year","Industry")]
###############################################
### GVA and output data from the blue book ####
# https://www.ons.gov.uk/economy/nationalaccounts/supplyandusetables/datasets/inputoutputsupplyandusetablessummarytables
minyr <- 1997
maxyr <- 2019
for (y in minyr:maxyr) {
yr <- as.character(y)
##### Output
out <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C76:L76",
col_names = FALSE)
setDT(out)
setnames(out,
names(out),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
out <- melt(out,
variable.name = "Industry",
value.name = "output")
out[, year := y]
##### GVA
gva <- readxl::read_excel("data-raw/bb21a10summarytables.xlsx",
sheet = yr,
range = "C73:L73",
col_names = FALSE)
setDT(gva)
setnames(gva,
names(gva),
c("Agriculture", "Production", "Construction",
"Distribution, transport, hotels and restaurants",
"Information and communication", "Finance and insurance",
"Real estate", "Professional and support activities",
"Government, education and health", "Other services"))
gva <- melt(gva,
variable.name = "Industry",
value.name = "gva")
gva[, year := y]
#### merge
data <- merge(out, gva, by = c("year","Industry"), sort = F)
#### stack data
if (y == minyr) {
bb_data <- copy(data)
} else {
bb_data <- rbindlist(list(bb_data, data))
}
}
rm(data, out, gva)
macro_data <- merge(bb_data, empl_data, by = c("year","Industry"), sort = F)
usethis::use_data(macro_data, overwrite = TRUE)
roxygen2::roxygenise()
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
roxygen2::roxygenise()
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
roxygen2::roxygenise()
library(tobalciomodel)
library(tobalciomodel)
crayon::bgCyan(egg)
crayon::bgCyan("egg")
cat("\tdone\n")
cat(crayon::bgCyan("Input-Output Model Parameters:\n"))
cat(crayon::bgGreen("Simulating Wider Economy Effects:\n"))
cat(crayon::green("\tChange in Off-Trade Alcohol Demand:"))
cat(crayon::blue("£",hhold_exp[1],"million\n"))
cat(crayon::blue("\tChange in On-Trade Alcohol Demand:"))
cat(crayon::magenta("\t(1/5) Constructing Final Demand Vector:"))
cat(crayon::red("\t(1/5) Constructing Final Demand Vector:"))
help(package = tobalciomodel)
library(tobalciomodel)
?matrix
library(tobalciomodel)
usethis::use_version()
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
roxygen2::roxygenise()
library(tobalciomodel)
library(tobalciomodel)
library(tobalciomodel)
