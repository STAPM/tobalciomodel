prices <- prices[order(year,product),]
prices[, price_per_unit := as.numeric(price_per_unit)]
rm(mesas_off, mesas_on)
### consumption
# on-trade
mesas_on  <- readxl::read_excel("data-raw/mesas-monitoring-report-2021-alcohol-sales.xlsx",
sheet = sheet,
range = r_con_on)
setDT(mesas_on)
mesas_on  <- mesas_on[, c(1,24:28)]
setnames(mesas_on, names(mesas_on), c("product","2016","2017","2018","2019","2020"))
mesas_on  <- mesas_on[product %in% c("Beer","Cider","Wine","Spirits","RTDs"), ]
mesas_on <- melt(mesas_on,
id.vars = "product",
variable.name = "year",
value.name = "units_per_adult")
mesas_on$product <- plyr::mapvalues(mesas_on$product,
from = c("Beer","Cider","Wine","Spirits","RTDs"),
to = c("on_beer","on_cider","on_wine","on_spirits","on_rtds"))
# off-trade
mesas_off  <- readxl::read_excel("data-raw/mesas-monitoring-report-2021-alcohol-sales.xlsx",
sheet = sheet,
range = r_con_off)
setDT(mesas_off)
mesas_off  <- mesas_off[, c(1,24:28)]
setnames(mesas_off, names(mesas_off), c("product","2016","2017","2018","2019","2020"))
mesas_off  <- mesas_off[product %in% c("Beer","Cider","Wine","Spirits","RTDs"), ]
mesas_off <- melt(mesas_off,
id.vars = "product",
variable.name = "year",
value.name = "units_per_adult")
mesas_off$product <- plyr::mapvalues(mesas_off$product,
from = c("Beer","Cider","Wine","Spirits","RTDs"),
to = c("off_beer","off_cider","off_wine","off_spirits","off_rtds"))
# combine
cons <- rbindlist(list(mesas_off,mesas_on))
cons[, product := factor(product, levels = prod_list)]
cons <- cons[order(year,product),]
cons[, units_per_adult := as.numeric(units_per_adult)]
rm(mesas_off, mesas_on)
#############################################
########## Merge the datasets together ######
cons[, year := as.numeric(year) + 2015]
prices[, year := as.numeric(year) + 2015]
duties[, year := as.numeric(year)]
data <- merge(prices, cons, by = c("year","product"))
data <- merge(data, pop_data, by = "year")
data <- merge(data, duties, by = c("year","product"))
##############################
## Calculate total consumption
data[, units := population * units_per_adult]
#################################
## Calculate basic price per unit
data[, duty := duty/100 ]
data[, vat  := price_per_unit*(0.2/1.2) ]
data[, tax := vat + duty]
data[, basic_price_per_unit := price_per_unit - tax]
#################################
## Calculate expenditure in both MP and BP
data[, exp_mp := (units * price_per_unit)/1000000]
data[, exp_bp := (units * basic_price_per_unit)/1000000]
######### SAVE OUT THE DATA
mesas_eng_wales <- copy(data)
usethis::use_data(mesas_eng_wales, overwrite = TRUE)
rm(list = ls())
### The purpose of this code is to construct aggregate price and consumption data for
### alcohol products to use in aggregate analyses.
library(data.table)
library(readxl)
library(plyr)
rm(list = ls())
prod_list <- c("off_beer","off_cider","off_wine","off_spirits","off_rtds",
"on_beer","on_cider","on_wine","on_spirits","on_rtds")
##################################
###### Duties
data <- readxl::read_excel("data-raw/alcohol duties 2016-2021.xlsx",
range = "B1:I161")
setDT(data)
duties <- data[, .(duty = weighted.mean(duty_per_unit, w = marketshare)), by = c("year","product")]
duties[, product := factor(product, levels = prod_list)]
rm(data)
##################################
############# MESAS
sheet    <- "Scotland data"
r_pop    <- "C23:C27"
r_pr_on  <- "B43:AC52"
r_pr_off <- "AE43:BF52"
r_con_on  <- "B30:AC39"
r_con_off <- "AE30:BF39"
### population
popsize   <- readxl::read_excel("data-raw/mesas-monitoring-report-2021-alcohol-sales.xlsx",
sheet = "Population data",
range = r_pop,
col_names = FALSE)
setDT(popsize)
year <- 2016:2020
setnames(popsize, names(popsize), "population")
pop_data <- data.table(year,popsize)
rm(year, popsize)
### prices
# on-trade
mesas_on  <- readxl::read_excel("data-raw/mesas-monitoring-report-2021-alcohol-sales.xlsx",
sheet = sheet,
range = r_pr_on)
setDT(mesas_on)
mesas_on  <- mesas_on[, c(1,24:28)]
setnames(mesas_on, names(mesas_on), c("product","2016","2017","2018","2019","2020"))
mesas_on  <- mesas_on[product %in% c("Beer","Cider","Wine","Spirits","RTDs"), ]
mesas_on <- melt(mesas_on,
id.vars = "product",
variable.name = "year",
value.name = "price_per_unit")
mesas_on$product <- plyr::mapvalues(mesas_on$product,
from = c("Beer","Cider","Wine","Spirits","RTDs"),
to = c("on_beer","on_cider","on_wine","on_spirits","on_rtds"))
# off-trade
mesas_off  <- readxl::read_excel("data-raw/mesas-monitoring-report-2021-alcohol-sales.xlsx",
sheet = sheet,
range = r_pr_off)
setDT(mesas_off)
mesas_off  <- mesas_off[, c(1,24:28)]
setnames(mesas_off, names(mesas_off), c("product","2016","2017","2018","2019","2020"))
mesas_off  <- mesas_off[product %in% c("Beer","Cider","Wine","Spirits","RTDs"), ]
mesas_off <- melt(mesas_off,
id.vars = "product",
variable.name = "year",
value.name = "price_per_unit")
mesas_off$product <- plyr::mapvalues(mesas_off$product,
from = c("Beer","Cider","Wine","Spirits","RTDs"),
to = c("off_beer","off_cider","off_wine","off_spirits","off_rtds"))
# combine
prices <- rbindlist(list(mesas_off,mesas_on))
prices[, product := factor(product, levels = prod_list)]
prices <- prices[order(year,product),]
prices[, price_per_unit := as.numeric(price_per_unit)]
rm(mesas_off, mesas_on)
### consumption
# on-trade
mesas_on  <- readxl::read_excel("data-raw/mesas-monitoring-report-2021-alcohol-sales.xlsx",
sheet = sheet,
range = r_con_on)
setDT(mesas_on)
mesas_on  <- mesas_on[, c(1,24:28)]
setnames(mesas_on, names(mesas_on), c("product","2016","2017","2018","2019","2020"))
mesas_on  <- mesas_on[product %in% c("Beer","Cider","Wine","Spirits","RTDs"), ]
mesas_on <- melt(mesas_on,
id.vars = "product",
variable.name = "year",
value.name = "units_per_adult")
mesas_on$product <- plyr::mapvalues(mesas_on$product,
from = c("Beer","Cider","Wine","Spirits","RTDs"),
to = c("on_beer","on_cider","on_wine","on_spirits","on_rtds"))
# off-trade
mesas_off  <- readxl::read_excel("data-raw/mesas-monitoring-report-2021-alcohol-sales.xlsx",
sheet = sheet,
range = r_con_off)
setDT(mesas_off)
mesas_off  <- mesas_off[, c(1,24:28)]
setnames(mesas_off, names(mesas_off), c("product","2016","2017","2018","2019","2020"))
mesas_off  <- mesas_off[product %in% c("Beer","Cider","Wine","Spirits","RTDs"), ]
mesas_off <- melt(mesas_off,
id.vars = "product",
variable.name = "year",
value.name = "units_per_adult")
mesas_off$product <- plyr::mapvalues(mesas_off$product,
from = c("Beer","Cider","Wine","Spirits","RTDs"),
to = c("off_beer","off_cider","off_wine","off_spirits","off_rtds"))
# combine
cons <- rbindlist(list(mesas_off,mesas_on))
cons[, product := factor(product, levels = prod_list)]
cons <- cons[order(year,product),]
cons[, units_per_adult := as.numeric(units_per_adult)]
rm(mesas_off, mesas_on)
#############################################
########## Merge the datasets together ######
cons[, year := as.numeric(year) + 2015]
prices[, year := as.numeric(year) + 2015]
duties[, year := as.numeric(year)]
data <- merge(prices, cons, by = c("year","product"))
data <- merge(data, pop_data, by = "year")
data <- merge(data, duties, by = c("year","product"))
##############################
## Calculate total consumption
data[, units := population * units_per_adult]
#################################
## Calculate basic price per unit
data[, duty := duty/100 ]
data[, vat  := price_per_unit*(0.2/1.2) ]
data[, tax := vat + duty]
data[, basic_price_per_unit := price_per_unit - tax]
#################################
## Calculate expenditure in both MP and BP
data[, exp_mp := (units * price_per_unit)/1000000]
data[, exp_bp := (units * basic_price_per_unit)/1000000]
######### SAVE OUT THE DATA
mesas_scotland <- copy(data)
usethis::use_data(mesas_scotland, overwrite = TRUE)
rm(list = ls())
roxygen2::roxygenise()
library(tobalciomodel)
### The purpose of this code is to construct aggregate price and consumption data for
### tobacco products to use in aggregate analyses.
library(data.table)
library(readxl)
library(plyr)
rm(list = ls())
### The purpose of this code is to construct aggregate price and consumption data for
### tobacco products to use in aggregate analyses.
library(data.table)
library(readxl)
library(plyr)
rm(list = ls())
##### RYO
ryo <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61")
View(ryo)
### The purpose of this code is to construct aggregate price and consumption data for
### tobacco products to use in aggregate analyses.
library(data.table)
library(readxl)
library(plyr)
rm(list = ls())
##### RYO
ryo <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61")
View(ryo)
ryo <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "RYO_tob")
ryo <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "RYO_tob")
View(ryo)
setDT(ryo)
data <- ryo[, .(tot_exp = sum(exp_mp),
tot_tax = sum(Tax)), by = "year"]
View(data)
rm(list = ls())
### The purpose of this code is to construct aggregate price and consumption data for
### tobacco products to use in aggregate analyses.
library(data.table)
library(readxl)
library(plyr)
rm(list = ls())
##### RYO
data <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "RYO_tob")
setDT(data)
ryo <- data[, .(tot_exp = sum(exp_mp),
tot_tax = sum(Tax)), by = "year"]
ryo[, tot_exp_bp := tot_exp - tot_tax]
View(ryo)
data <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "FM_cigs")
setDT(data)
fm <- data[, .(tot_exp = sum(exp_mp),
tot_tax = sum(Tax)), by = "year"]
fm[, tot_exp_bp := tot_exp - tot_tax]
rm(data)
View(fm)
tobacco_data <- rbindlist(list(fm, ryo))
View(tobacco_data)
### The purpose of this code is to construct aggregate price and consumption data for
### tobacco products to use in aggregate analyses.
library(data.table)
library(readxl)
library(plyr)
rm(list = ls())
##### RYO
data <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "RYO_tob")
setDT(data)
ryo <- data[, .(tot_exp = sum(exp_mp),
tot_tax = sum(Tax)), by = "year"]
ryo[, tot_exp_bp := tot_exp - tot_tax]
ryo[, product := "RYO_tob"]
rm(data)
##### FM
data <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "FM_cigs")
setDT(data)
fm <- data[, .(tot_exp = sum(exp_mp),
tot_tax = sum(Tax)), by = "year"]
fm[, tot_exp_bp := tot_exp - tot_tax]
fm[, product := "FM_cigs"]
rm(data)
##### Combine data sources
tobacco_data <- rbindlist(list(fm, ryo))
View(tobacco_data)
library(tobalciomodel)
help(package = tobalciomodel)
data <- tobalciomodel::mesas_eng_wales
View(data)
### The purpose of this code is to construct aggregate price and consumption data for
### tobacco products to use in aggregate analyses.
library(data.table)
library(readxl)
library(plyr)
rm(list = ls())
##### RYO
data <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "RYO_tob")
setDT(data)
ryo <- data[, .(exp_mp = sum(exp_mp),
tot_tax = sum(Tax)), by = "year"]
ryo[, exp_bp := exp_mp - tot_tax]
ryo[, product := "RYO_tob"]
rm(data)
##### FM
data <- readxl::read_excel("data-raw/tobacco data.xlsx",
range = "B1:L61",
sheet = "FM_cigs")
setDT(data)
fm <- data[, .(exp_mp = sum(exp_mp),
tot_tax = sum(Tax)), by = "year"]
fm[, exp_bp := exp_mp - tot_tax]
fm[, product := "FM_cigs"]
rm(data)
##### Combine data sources
tobacco_data <- rbindlist(list(fm, ryo))
View(tobacco_data)
View(tobacco_data)
usethis::use_data(tobacco_data, overwrite = TRUE)
roxygen2::roxygenise()
library(tobalciomodel)
rm(list = ls())
tobacco = tobalciomodel::tobacco_data
alcohol_eng = tobalciomodel::mesas_eng_wales
alcohol_scot = tobalciomodel::mesas_scotland
prop_alc_on = -0.1
prop_alc_off = -0.1
prop_tob_fm = -0.1
prop_tob_ryo = -0.1
year = 2020
data_tob <- tobacco[year == year,]
yr = 2020
data_tob <- tobacco[year == yr,]
View(data_tob)
data_tob     <- tobacco[year == yr,]
alcohol_eng  <- alcohol_eng[year == yr,]
alcohol_scot <- alcohol_scot[year == yr,]
data_tob      <- tobacco[year == yr,]
data_alc_eng  <- alcohol_eng[year == yr,]
data_alc_scot <- alcohol_scot[year == yr,]
alcohol_eng = tobalciomodel::mesas_eng_wales
alcohol_scot = tobalciomodel::mesas_scotland
data_alc_eng  <- alcohol_eng[year == yr, country = "engwales"]
data_alc_scot <- alcohol_scot[year == yr, country = "scotland"]
data_alc_eng  <- alcohol_eng[year == yr, country := "engwales"]
data_alc_scot <- alcohol_scot[year == yr, country := "scotland"]
data_alc_eng  <- alcohol_eng[year == yr]
data_alc_scot <- alcohol_scot[year == yr]
data_alc <- rbindlist(list(data_alc_eng, data_alc_scot))
View(data_alc)
names(data_alc)
data_alc[product %in% c("off_beer","off_cider","off_wine","off_spirits","off_rtds"),
change := (1 + prop_alc_off)*exp_bp ]
View(data_alc)
data_alc[product %in% c("off_beer","off_cider","off_wine","off_spirits","off_rtds"),
change := (1 + prop_alc_off)*exp_bp - exp_bp ]
View(data_alc)
change_off_alc <- sum(data_alc[,"change"])
change_off_alc <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
View(data_alc)
data_alc[product %in% c("on_beer","on_cider","on_wine","on_spirits","on_rtds"),
change := (1 + prop_alc_off)*exp_bp - exp_bp ]
change_on_alc <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
data_tob[product %in% c("FM_cigs"),
change := (1 + prop_tob_fm)*exp_bp - exp_bp ]
View(data_tob)
# restrict to year chosen
data_tob      <- tobacco[year == yr,]
data_alc_eng  <- alcohol_eng[year == yr]
data_alc_scot <- alcohol_scot[year == yr]
data_alc <- rbindlist(list(data_alc_eng, data_alc_scot))
# off-trade alcohol
data_alc[product %in% c("off_beer","off_cider","off_wine","off_spirits","off_rtds"),
change := (1 + prop_alc_off)*exp_bp - exp_bp ]
exp_alc_off_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
# on-trade alcohol
data_alc[product %in% c("on_beer","on_cider","on_wine","on_spirits","on_rtds"),
change := (1 + prop_alc_on)*exp_bp - exp_bp ]
exp_alc_on_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
# FM cigs
data_tob[product %in% c("FM_cigs"),
change := (1 + prop_tob_fm)*exp_bp - exp_bp ]
data_tob[product %in% c("RYO_tob"),
change := (1 + prop_tob_ryo)*exp_bp - exp_bp ]
exp_tob_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
rm(list = ls())
tobacco = tobalciomodel::tobacco_data
alcohol_eng = tobalciomodel::mesas_eng_wales
alcohol_scot = tobalciomodel::mesas_scotland
prop_alc_on = -0.1
prop_alc_off = -0.1
prop_tob_fm = -0.1
prop_tob_ryo = -0.1
yr = 2020
# restrict to year chosen
data_tob      <- tobacco[year == yr,]
data_alc_eng  <- alcohol_eng[year == yr]
data_alc_scot <- alcohol_scot[year == yr]
data_alc <- rbindlist(list(data_alc_eng, data_alc_scot))
# off-trade alcohol
data_alc[product %in% c("off_beer","off_cider","off_wine","off_spirits","off_rtds"),
change := (1 + prop_alc_off)*exp_bp - exp_bp ]
exp_alc_off_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
# on-trade alcohol
data_alc[product %in% c("on_beer","on_cider","on_wine","on_spirits","on_rtds"),
change := (1 + prop_alc_on)*exp_bp - exp_bp ]
exp_alc_on_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
# Tobacco
data_tob[product %in% c("FM_cigs"),
change := (1 + prop_tob_fm)*exp_bp - exp_bp ]
data_tob[product %in% c("RYO_tob"),
change := (1 + prop_tob_ryo)*exp_bp - exp_bp ]
exp_tob_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
data_tob[product %in% c("FM_cigs"),
change := (1 + prop_tob_fm)*exp_bp - exp_bp ]
data_tob[product %in% c("RYO_tob"),
change := (1 + prop_tob_ryo)*exp_bp - exp_bp ]
exp_tob_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_tob[, change := NULL]
data_tob[product %in% c("FM_cigs"),
change := (1 + prop_tob_fm)*exp_bp - exp_bp ]
data_tob[product %in% c("RYO_tob"),
change := (1 + prop_tob_ryo)*exp_bp - exp_bp ]
exp_tob_bp <- sum(data_tob[,"change"], na.rm = TRUE)
data_tob[, change := NULL]
year = yr
out <- data.table(year, exp_alc_off_bp, exp_alc_on_bp, exp_tob_bp)
View(out)
View(data_alc)
View(data_tob)
View(data_alc_scot)
View(data_tob)
data_tob[product %in% c("FM_cigs"),
tax := (1 + prop_tob_fm)*tot_tax - tot_tax ]
data_tob[product %in% c("RYO_tob"),
tax := (1 + prop_tob_ryo)*tot_tax - tot_tax ]
tax_tob_bp <- sum(data_tob[,"tax"], na.rm = TRUE)
data_tob[, change := NULL]
data_tob[, tax := NULL]
View(data_alc)
data_alc[, tot_tax := exp_mp - exp_bp]
View(data_alc)
# restrict to year chosen
data_tob      <- tobacco[year == yr,]
data_alc_eng  <- alcohol_eng[year == yr]
data_alc_scot <- alcohol_scot[year == yr]
data_alc <- rbindlist(list(data_alc_eng, data_alc_scot))
data_alc[, tot_tax := exp_mp - exp_bp]
##### off-trade alcohol
## expenditure
data_alc[product %in% c("off_beer","off_cider","off_wine","off_spirits","off_rtds"),
change := (1 + prop_alc_off)*exp_bp - exp_bp ]
exp_alc_off_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
## tax
data_alc[product %in% c("off_beer","off_cider","off_wine","off_spirits","off_rtds"),
tax := (1 + prop_alc_off)*tot_tax - tot_tax ]
tax_alc_off_bp <- sum(data_alc[,"tax"], na.rm = TRUE)
data_alc[, tax := NULL]
##### on-trade alcohol
## expenditure
data_alc[product %in% c("on_beer","on_cider","on_wine","on_spirits","on_rtds"),
change := (1 + prop_alc_on)*exp_bp - exp_bp ]
exp_alc_on_bp <- sum(data_alc[,"change"], na.rm = TRUE)
data_alc[, change := NULL]
## tax
data_alc[product %in% c("on_beer","on_cider","on_wine","on_spirits","on_rtds"),
tax := (1 + prop_alc_on)*tot_tax - tot_tax ]
tax_alc_on_bp <- sum(data_alc[,"tax"], na.rm = TRUE)
data_alc[, tax := NULL]
##### Tobacco
## expenditure
data_tob[product %in% c("FM_cigs"),
change := (1 + prop_tob_fm)*exp_bp - exp_bp ]
data_tob[product %in% c("RYO_tob"),
change := (1 + prop_tob_ryo)*exp_bp - exp_bp ]
exp_tob_bp <- sum(data_tob[,"change"], na.rm = TRUE)
data_tob[, change := NULL]
## tax
data_tob[product %in% c("FM_cigs"),
tax := (1 + prop_tob_fm)*tot_tax - tot_tax ]
data_tob[product %in% c("RYO_tob"),
tax := (1 + prop_tob_ryo)*tot_tax - tot_tax ]
tax_tob_bp <- sum(data_tob[,"tax"], na.rm = TRUE)
data_tob[, tax := NULL]
##### Totals
net_govt_revenue <- tax_alc_off_bp + tax_alc_on_bp + tax_tob_bp
exp_total_bp <- exp_alc_off_bp + exp_alc_on_bp + exp_tob_bp
######## Combine outputs
year = yr
out <- data.table(year, exp_alc_off_bp, exp_alc_on_bp, exp_tob_bp, exp_total_bp, net_govt_revenue)
View(out)
roxygen2::roxygenise()
library(tobalciomodel)
help(package = tobalciomodel)
